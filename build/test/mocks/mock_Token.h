/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_TOKEN_H
#define _MOCK_TOKEN_H

#include "Token.h"
#include "CException.h"

void mock_Token_Init(void);
void mock_Token_Destroy(void);
void mock_Token_Verify(void);




#define getToken_IgnoreAndReturn(cmock_retval) getToken_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void getToken_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, Token* cmock_to_return);
#define getToken_ExpectAndReturn(expression, cmock_retval) getToken_CMockExpectAndReturn(__LINE__, expression, cmock_retval)
void getToken_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, String* expression, Token* cmock_to_return);
typedef Token* (* CMOCK_getToken_CALLBACK)(String* expression, int cmock_num_calls);
void getToken_StubWithCallback(CMOCK_getToken_CALLBACK Callback);
#define getToken_ExpectAndThrow(expression, cmock_to_throw) getToken_CMockExpectAndThrow(__LINE__, expression, cmock_to_throw)
void getToken_CMockExpectAndThrow(UNITY_LINE_TYPE cmock_line, String* expression, CEXCEPTION_T cmock_to_throw);

#endif
